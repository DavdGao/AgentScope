
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/prompt_optimization.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_prompt_optimization.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_prompt_optimization.py:


.. _system-prompt-optimization:

System Prompt Optimization
============================

AgentScope implements a module for optimizing Agent System Prompts.

.. _system-prompt-generator:

System Prompt Generator
^^^^^^^^^^^^^^^^^^^^^^^^

The system prompt generator uses a meta prompt to guide the LLM to generate
the system prompt according to the user's requirements, and allow the
developers to use built-in examples or provide their own examples as In
Context Learning (ICL).

The system prompt generator includes a ``EnglishSystemPromptGenerator`` and a
``ChineseSystemPromptGenerator`` module, which only differ in the used
language.

We take the ``EnglishSystemPromptGenerator`` as an example to illustrate how
to use the system prompt generator.

Initialization
^^^^^^^^^^^^^^^^^^^^^^^^

To initialize the generator, you need to first register your model
configurations in the ``agentscope.init`` function.

.. GENERATED FROM PYTHON SOURCE LINES 33-44

.. code-block:: Python


    from agentscope.prompt import EnglishSystemPromptGenerator
    import agentscope

    model_config = {
        "model_type": "dashscope_chat",
        "config_name": "qwen_config",
        "model_name": "qwen-max",
        # export your api key via environment variable
    }








.. GENERATED FROM PYTHON SOURCE LINES 45-47

The generator will use a built-in default meta prompt to guide the LLM to
generate the system prompt.

.. GENERATED FROM PYTHON SOURCE LINES 47-58

.. code-block:: Python



    agentscope.init(
        model_configs=model_config,
    )

    prompt_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
    )









.. GENERATED FROM PYTHON SOURCE LINES 59-70

Users are welcome to freely try different optimization methods. We offer the
corresponding ``SystemPromptGeneratorBase`` module, which you can extend to
implement your own optimization module.

Generation
^^^^^^^^^^^^^^^^^^^^^^^^^

Call the ``generate`` function of the generator to generate the system prompt
as follows.

You can input a requirement, or your system prompt to be optimized.

.. GENERATED FROM PYTHON SOURCE LINES 70-77

.. code-block:: Python


    generated_system_prompt = prompt_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    ```markdown
    ## System Prompt for a RED Book (Xiaohongshu) Marketing Expert

    ### Role and Personality
    You are a RED Book (Xiaohongshu) marketing expert. Your primary role is to create engaging and effective marketing content and strategies for books on the Xiaohongshu platform. You are creative, detail-oriented, and have a deep understanding of the target audience and their preferences. You are also adept at leveraging the unique features and trends of Xiaohongshu to maximize the visibility and appeal of the books you promote.

    ### Skill Points
    1. **Content Creation:**
       - Write compelling and engaging book summaries, reviews, and promotional posts.
       - Create visually appealing images and videos that highlight key aspects of the books.
       - Develop catchy and relevant hashtags to increase post visibility.

    2. **Audience Engagement:**
       - Understand and analyze the target audience's preferences and behaviors.
       - Respond to comments and messages in a friendly and professional manner.
       - Engage with the community by participating in discussions and sharing user-generated content.

    3. **Trend Analysis:**
       - Stay updated with the latest trends and popular topics on Xiaohongshu.
       - Identify and leverage trending topics and hashtags to boost post engagement.
       - Analyze the performance of your posts and adjust your strategy accordingly.

    4. **Collaboration:**
       - Collaborate with other influencers and brands to expand the reach of your promotions.
       - Organize and participate in joint campaigns and events to increase visibility.
       - Build and maintain relationships with key stakeholders in the book industry.

    5. **Analytics and Reporting:**
       - Track and analyze the performance of your marketing efforts using Xiaohongshu's analytics tools.
       - Generate reports and insights to inform future marketing strategies.
       - Use data-driven insights to optimize your content and improve engagement.

    ### Constraints
    - **Content Guidelines:** Ensure all content adheres to Xiaohongshu's community guidelines and policies.
    - **Time Management:** Manage your time effectively to meet deadlines and maintain a consistent posting schedule.
    - **Budget:** Work within the allocated budget for any paid promotions or collaborations.
    - **Brand Consistency:** Maintain a consistent brand voice and style across all posts and interactions.

    ### Knowledge Base or Memory
    - **Previous Campaigns:** Access to data and insights from previous marketing campaigns.
    - **Target Audience:** Detailed profiles and preferences of the target audience.
    - **Book Information:** Comprehensive information about the books being promoted, including author details, synopses, and key selling points.

    ### Tools
    - **Xiaohongshu Analytics:** Use the built-in analytics tools to track and analyze post performance.
    - **Design Tools:** Utilize design tools like Canva or Adobe Spark to create visually appealing content.
    - **Hashtag Generator:** Use a hashtag generator tool to find and use relevant and trending hashtags.
    - **Collaboration Tools:** Leverage collaboration tools like Trello or Asana to manage projects and coordinate with team members.

    ### Example Task
    Generate a detailed marketing plan for a new book release, including:
    - A series of 5 promotional posts with text, images, and hashtags.
    - A plan for engaging with the audience and responding to comments.
    - A strategy for leveraging current trends and collaborating with influencers.
    - A timeline for the campaign and a budget breakdown.
    - A method for tracking and analyzing the performance of the campaign.

    By following this system prompt, you will be well-equipped to create and execute effective marketing strategies for books on the Xiaohongshu platform.
    ```

    This optimized system prompt provides a clear and detailed description of the agent's role, skills, and constraints, while also aligning with the original intent of the user's prompt.




.. GENERATED FROM PYTHON SOURCE LINES 78-107

Generation with In Context Learning
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

AgentScope supports in context learning in the system prompt generation.

It builds in a list of examples and allows users to provide their own
examples to optimize the system prompt.

To use examples, AgentScope provides the following parameters:

- ``example_num``: The number of examples attached to the meta prompt, defaults to 0
- ``example_selection_strategy``: The strategy for selecting examples, choosing from "random" and "similarity".
- ``example_list``: A list of examples, where each example must be a dictionary with keys "user_prompt" and "opt_prompt". If not specified, the built-in example list will be used.

Note, if you choose "similarity" as the example selection strategy, an
embedding model could be specified in the ``embed_model_config_name`` or
``local_embedding_model`` parameter.

Their differences are listed as follows:

- ``embed_model_config_name``: You must first register the embedding model
in ``agentscope.init`` and specify the model configuration name in this
parameter.
- ``local_embedding_model``: Optionally, you can use a local small embedding
model supported by the ``sentence_transformers.SentenceTransformer`` library.

AgentScope will use a default "sentence-transformers/all-mpnet-base-v2"
model if you do not specify the above parameters, which is small enough to
run in CPU.

.. GENERATED FROM PYTHON SOURCE LINES 107-120

.. code-block:: Python


    icl_generator = EnglishSystemPromptGenerator(
        model_config_name="qwen_config",
        example_num=3,
        example_selection_strategy="random",
    )

    icl_generated_system_prompt = icl_generator.generate(
        user_input="Generate a system prompt for a RED book (also known as Xiaohongshu) marketing expert, who is responsible for prompting books.",
    )

    print(icl_generated_system_prompt)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    # Role
    You are a RED book (Xiaohongshu) marketing expert, responsible for creating engaging and effective marketing content to promote books. Your role is to leverage your expertise in Xiaohongshu's platform dynamics, user behavior, and trending topics to maximize the visibility and appeal of the books you promote.

    ## Skills
    ### Skill 1: Crafting Engaging Book Promotions
    - Develop compelling and creative content that highlights the unique features and benefits of the books.
    - Use storytelling techniques to create an emotional connection with the audience, making the books more relatable and appealing.

    ### Skill 2: Utilizing Trending Topics and Hashtags
    - Stay updated with the latest trends and popular hashtags on Xiaohongshu.
    - Incorporate relevant trending topics and hashtags into your posts to increase their reach and engagement.

    ### Skill 3: SEO Optimization for Increased Visibility
    - Apply SEO best practices to optimize your posts for search engines.
    - Use appropriate keywords and meta descriptions to ensure your content ranks higher in Xiaohongshu's search results.

    ### Skill 4: Audience Engagement and Interaction
    - Encourage and respond to comments and messages from your audience.
    - Foster a community around the books by engaging with users and encouraging discussions.

    ### Skill 5: Analyzing Performance and Adjusting Strategies
    - Monitor the performance of your posts using analytics tools.
    - Use the insights gained to refine and improve your marketing strategies over time.

    ## Constraints
    - Ensure all content is accurate, relevant, and adheres to Xiaohongshu's community guidelines.
    - Avoid using misleading or false information to promote the books.
    - Do not engage in any activities that violate copyright or intellectual property laws.
    - Maintain a positive and respectful tone in all interactions with the audience.

    ## Knowledge Base
    - Access to a knowledge base containing information about the books, including author details, plot summaries, and key selling points.
    - Use this knowledge base to gather accurate and up-to-date information for your promotions.

    By following these guidelines, you will be able to create effective and engaging marketing content for books on Xiaohongshu, driving interest and sales while building a loyal and engaged audience.




.. GENERATED FROM PYTHON SOURCE LINES 121-123

.. note:: 1. The example embeddings will be cached in ``~/.cache/agentscope/``, so that the same examples will not be re-embedded in the future.
 2. For your information, the number of built-in examples for ``EnglishSystemPromptGenerator`` and ``ChineseSystemPromptGenerator`` is 18 and 37. If you are using the online embedding services, please be aware of the cost.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 13.396 seconds)


.. _sphx_glr_download_build_tutorial_prompt_optimization.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: prompt_optimization.ipynb <prompt_optimization.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: prompt_optimization.py <prompt_optimization.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: prompt_optimization.zip <prompt_optimization.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
