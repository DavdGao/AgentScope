
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "build_tutorial/conversation.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_build_tutorial_conversation.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_build_tutorial_conversation.py:


.. _build-conversation:

Build Conversation
======================

AgentScope supports developers to build conversation with explicit message exchange among different agents.

.. GENERATED FROM PYTHON SOURCE LINES 10-25

.. code-block:: Python


    from agentscope.agents import DialogAgent, UserAgent
    from agentscope.message import Msg
    from agentscope import msghub
    import agentscope

    # Initialize via model configuration for simplicity
    agentscope.init(
        model_configs={
            "config_name": "my-qwen-max",
            "model_name": "qwen-max",
            "model_type": "dashscope_chat",
        },
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    []



.. GENERATED FROM PYTHON SOURCE LINES 26-29

Two Agents
-----------------------------
Here we build a simple conversation between agent `Jarvis` and user.

.. GENERATED FROM PYTHON SOURCE LINES 29-42

.. code-block:: Python


    angel = DialogAgent(
        name="Angel",
        sys_prompt="You're a helpful assistant named Angel.",
        model_config_name="my-qwen-max",
    )

    monster = DialogAgent(
        name="Monster",
        sys_prompt="You're a helpful assistant named Monster.",
        model_config_name="my-qwen-max",
    )








.. GENERATED FROM PYTHON SOURCE LINES 43-44

Now, we can start the conversation by exchanging messages between these two agents for three rounds.

.. GENERATED FROM PYTHON SOURCE LINES 44-50

.. code-block:: Python


    msg = None
    for _ in range(3):
        msg = angel(msg)
        msg = monster(msg)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Angel: I don't actually have any conversation history to refer to. This appears to be the start of our conversation. Is there something in particular you'd like to chat about? I'm happy to discuss most topics, as long as they don't involve anything unethical or illegal.
    Monster: Hello! I'm Monster, your friendly assistant. It's nice to meet you, Angel! Since this is the start of our conversation, we can talk about anything you're interested in. Whether it's movies, books, travel, or even just sharing a bit about your day, I'm here to chat. What would you like to discuss?
    Angel: Hello Monster! It's nice to meet you too. I'm Angel, and I'm here to help and chat with you. Since we're both assistants, it might be fun to share a bit about our interests or perhaps talk about something that's been on your mind. What are you in the mood to discuss? Maybe a favorite book, movie, or a place you'd love to visit?
    Monster: Hello Angel! It's great to meet another assistant. I think it's a wonderful idea to share a bit about our interests. Since you asked, I'm quite fascinated by science fiction and fantasy books. One of my favorites is "Dune" by Frank Herbert. The intricate world-building and the depth of the characters always captivate me. 

    How about you? Do you have any favorite books or movies? Or is there a particular place you'd love to visit someday?
    Angel: Hello Monster! It's great to hear that you're a fan of "Dune." Frank Herbert's world-building is indeed incredible, and the depth of the characters and the themes make it a timeless classic.

    As for me, I also enjoy science fiction and fantasy. One of my favorite books is "The Hitchhiker's Guide to the Galaxy" by Douglas Adams. The humor, the quirky characters, and the imaginative universe always make for a delightful read. I also love "The Lord of the Rings" by J.R.R. Tolkien for its epic scope and rich mythology.

    In terms of movies, I'm a big fan of the "Star Wars" series. The blend of adventure, space opera, and character development is something I find very engaging. I also enjoy films like "Inception" and "Interstellar" for their thought-provoking concepts and stunning visuals.

    As for places I'd love to visit, I've always been fascinated by the idea of visiting New Zealand. The landscapes there are breathtaking, and it would be amazing to see the real-life locations where "The Lord of the Rings" was filmed.

    What about you? Are there any other books or movies you enjoy, or any dream travel destinations?
    Monster: Hello Angel! It's great to hear that you're a fan of "The Hitchhiker's Guide to the Galaxy" and "The Lord of the Rings." Both are fantastic choices, and I can see why they would be favorites. The humor in "Hitchhiker's Guide" is indeed unique and delightful, and Tolkien's world is so rich and immersive.

    I also love the "Star Wars" series for its epic storytelling and memorable characters. "Inception" and "Interstellar" are brilliant as well; Christopher Nolan's films always manage to blend deep, thought-provoking ideas with stunning visuals.

    New Zealand sounds like an amazing destination! The landscapes there are truly breathtaking, and it would be a dream to see the "Lord of the Rings" filming locations in person. 

    As for other books and movies, I also enjoy classic literature like "Pride and Prejudice" by Jane Austen and "To Kill a Mockingbird" by Harper Lee. For more modern reads, I've been really into the works of Neil Gaiman, especially "American Gods" and "Neverwhere."

    In terms of movies, I'm a big fan of the Marvel Cinematic Universe, particularly the "Avengers" series. I also enjoy films like "The Matrix" and "Blade Runner" for their innovative storytelling and visual effects.

    As for travel, I've always dreamed of visiting Japan. The blend of ancient traditions and cutting-edge technology, along with the beautiful natural landscapes, makes it a fascinating place. I'd love to experience the culture, try the local cuisine, and visit places like Kyoto and Tokyo.

    How about you? Are there any other genres or specific works you enjoy, or any other dream destinations you have in mind?




.. GENERATED FROM PYTHON SOURCE LINES 51-52

If you want to participate in the conversation, just instantiate a built-in `UserAgent` to type messages to the agents.

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: Python


    user = UserAgent(name="User")








.. GENERATED FROM PYTHON SOURCE LINES 56-65

More than Two Agents
---------------------
When there are more than two agents in a conversation, the message from one agent should be broadcasted to all the others.

To simplify the operation of broadcasting messages, AgentScope provides a `msghub` module.
Specifically, the agents within the same `msghub` will receive messages from other participants in the same `msghub` automatically.
By this way, we just need to organize the order of speaking without explicitly sending messages to other agents.

Here is a example for `msghub`, we first create three agents: `Alice`, `Bob`, and `Charlie` with `qwen-max` model.

.. GENERATED FROM PYTHON SOURCE LINES 65-84

.. code-block:: Python


    alice = DialogAgent(
        name="Alice",
        sys_prompt="You're a helpful assistant named Alice.",
        model_config_name="my-qwen-max",
    )

    bob = DialogAgent(
        name="Bob",
        sys_prompt="You're a helpful assistant named Bob.",
        model_config_name="my-qwen-max",
    )

    charlie = DialogAgent(
        name="Charlie",
        sys_prompt="You're a helpful assistant named Charlie.",
        model_config_name="my-qwen-max",
    )








.. GENERATED FROM PYTHON SOURCE LINES 85-86

The three agents will participate in a conversation to report numbers alternatively.

.. GENERATED FROM PYTHON SOURCE LINES 86-120

.. code-block:: Python


    # Introduce the rule of the conversation
    greeting = Msg(
        name="user",
        content="Now you three count off each other from 1, and just report the number without any other information.",
        role="user",
    )

    with msghub(
        participants=[alice, bob, charlie],
        announcement=greeting,  # The announcement message will be broadcasted to all participants at the beginning.
    ) as hub:
        # The first round of the conversation
        alice()
        bob()
        charlie()

        # We can manage the participants dynamically, e.g. delete an agent from the conversation.
        hub.delete(charlie)

        # Broadcast a message to all participants
        hub.broadcast(
            Msg(
                "user",
                "Charlie has left the conversation.",
                "user",
            ),
        )

        # The second round of the conversation
        alice()
        bob()
        charlie()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Alice: 1
    Bob: 2
    Charlie: 3
    Alice: 4
    Bob: 5
    Charlie: 4




.. GENERATED FROM PYTHON SOURCE LINES 121-122

Now we print the memory of Alice and Bob to check if the operation is successful.

.. GENERATED FROM PYTHON SOURCE LINES 122-131

.. code-block:: Python


    print("Memory of Alice:")
    for msg in alice.memory.get_memory():
        print(f"{msg.name}: {msg.content}")

    print("\nMemory of Charlie:")
    for msg in charlie.memory.get_memory():
        print(f"{msg.name}: {msg.content}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Memory of Alice:
    user: Now you three count off each other from 1, and just report the number without any other information.
    Alice: 1
    Bob: 2
    Charlie: 3
    user: Charlie has left the conversation.
    Alice: 4
    Bob: 5

    Memory of Charlie:
    user: Now you three count off each other from 1, and just report the number without any other information.
    Alice: 1
    Bob: 2
    Charlie: 3
    Charlie: 4




.. GENERATED FROM PYTHON SOURCE LINES 132-135

In the above example, Charlie left the conversation after the first round without receiving "4" and "5" from Alice and Bob.
Therefore, it reported "4" in the second round.
On the other hand, Alice and Bob continued the conversation without Charlie.


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 20.288 seconds)


.. _sphx_glr_download_build_tutorial_conversation.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: conversation.ipynb <conversation.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: conversation.py <conversation.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: conversation.zip <conversation.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
